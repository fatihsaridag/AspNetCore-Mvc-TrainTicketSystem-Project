// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainTicket.Data.Contexts;

namespace TrainTicket.Data.Migrations
{
    [DbContext(typeof(TrainTicketContext))]
    [Migration("20221202201540_mig_entity_add_tickets_property")]
    partial class mig_entity_add_tickets_property
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrainTicket.Entity.Entities.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("TrainTicket.Entity.Entities.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ToWhere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainRouteId")
                        .HasColumnType("int");

                    b.Property<int>("seatNo")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("TrainRouteId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TrainTicket.Entity.Entities.TrainRoute", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinishRo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Ro1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ro2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ro3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartRo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RouteId");

                    b.ToTable("TrainRoutes");
                });

            modelBuilder.Entity("TrainTicket.Entity.Entities.Ticket", b =>
                {
                    b.HasOne("TrainTicket.Entity.Entities.TrainRoute", "trainRoute")
                        .WithMany("Tickets")
                        .HasForeignKey("TrainRouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("trainRoute");
                });

            modelBuilder.Entity("TrainTicket.Entity.Entities.TrainRoute", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
